package sendinblue;

import org.apache.commons.lang3.StringEscapeUtils;
import org.apache.commons.lang3.StringUtils;
import org.hamcrest.CoreMatchers;
import org.junit.Test;
import sibModel.SendEmail;
import sibModel.SendEmailAttachment;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Collections;

import static java.util.Base64.getEncoder;
import static org.junit.Assert.assertThat;

public class JsonTest {

    private Json jsonToTest = new Json();

    private static final String XYZ_FILE_BASE64_CODE = "";
    private static final String FILENAME_TO_SERIALIZE =  "xyz.pdf";
    private static final String EMAIL_TO = "meriem@sendinblue.com";
    private static final String EXPECTED_JSON_PAYLOAD = "{\"emailTo\":[\"meriem@sendinblue.com\"],\"attachment\":[{\"content\":\"\",\"name\":\"xyz.pdf\"}]}";


    @Test
    public void shouldTestSerializer() throws Exception{
        SendEmail email = new SendEmail();
        email.setEmailTo(Collections.singletonList(EMAIL_TO));

        SendEmailAttachment sendEmailAttachment = new SendEmailAttachment();
        sendEmailAttachment.setName(FILENAME_TO_SERIALIZE);
        byte[] encode = Files.readAllBytes(Paths.get(getPathToFile()));
        sendEmailAttachment.setContent(encode);

        email.setAttachment(Collections.singletonList(sendEmailAttachment));

        String serializedJson = jsonToTest.serialize(email);
        assertThat(serializedJson,CoreMatchers.equalTo(StringEscapeUtils.unescapeJava(EXPECTED_JSON_PAYLOAD)));
        assertThat(serializedJson, CoreMatchers.containsString(XYZ_FILE_BASE64_CODE));
        assertThat(serializedJson, CoreMatchers.containsString(EMAIL_TO));
        assertThat(serializedJson, CoreMatchers.containsString(FILENAME_TO_SERIALIZE));
    }

    @Test
    public void shouldTestDeserializer() throws Exception{
        SendEmail email = new SendEmail();
        email.setEmailTo(Collections.singletonList(EMAIL_TO));

        SendEmailAttachment sendEmailAttachment = new SendEmailAttachment();
        sendEmailAttachment.setName(FILENAME_TO_SERIALIZE);
        byte[] encode = Files.readAllBytes(Paths.get(getPathToFile()));
        sendEmailAttachment.setContent(encode);

        email.setAttachment(Collections.singletonList(sendEmailAttachment));
        String serializedJson = jsonToTest.serialize(email);

        SendEmail deserializedSendEmail = jsonToTest.deserialize(serializedJson, SendEmail.class);

        assertThat(getEncoder().encodeToString(deserializedSendEmail.getAttachment().get(0).getContent()), CoreMatchers.equalTo(XYZ_FILE_BASE64_CODE));
        assertThat(deserializedSendEmail.getEmailTo().get(0), CoreMatchers.containsString(EMAIL_TO));
        assertThat(deserializedSendEmail.getAttachment().get(0).getName(), CoreMatchers.containsString(FILENAME_TO_SERIALIZE));
    }

    public String getPathToFile() throws IOException {
        ClassLoader classLoader = this.getClass().getClassLoader();
        File file = new File(classLoader.getResource(FILENAME_TO_SERIALIZE).getFile());
        return file.getPath();
    }
}